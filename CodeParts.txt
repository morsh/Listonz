	// Fixing placeholders
    /*if (!Modernizr.input.placeholder) {
        $('[placeholder]').each(function () {
            $this = $(this);
            if ($this.attr('placeholder'))
                $this.before(
                    $('<label class="placeholder" onclick="$(this).next().focus();"></label>').text($this.attr('placeholder')));

            $this.blur(function () {
                var input = $(this);
                if (input.val() == '')
                    input.prev().show();
                else
                    input.prev().hide();
            }).focus(function () {
                alert($(this).prev('label').text());
                $(this).prev('label').hide();
            });
        });
        /*$('[placeholder]').focus(function () {
            var input = $(this);
            if (input.val() == input.attr('placeholder')) {
                input.val('');
                input.removeClass('placeholder');
            }
        }).blur(function () {
            var input = $(this);
            if (input.val() == '' || input.val() == input.attr('placeholder')) {
                input.addClass('placeholder');
                input.val(input.attr('placeholder'));
            }
        })
        .blur()
        .parents('form').submit(function () {
            $(this).find('[placeholder]').each(function () {
                var input = $(this);
                if (input.val() == input.attr('placeholder')) {
                    input.val('');
                }
            })
        });*
    }*/



	/*
self.model = function (data) {
    this.Id = ko.observable(data ? data.Id : 0);
    this.FirstName = ko.observable(data ? data.FirstName : '');
    this.LastName = ko.observable(data ? data.LastName : '');

    this.CompanyId = ko.observable();
    this.Company = ko.observable(new function () {
        this.Id = ko.observable(data && data.Company ? data.Company.Id : 0);
        this.FirstName = ko.observable(data && data.Company ? data.Company.FirstName : '');
    }());
    this.Country = ko.observable(data ? data.Country : null);
    this.State = ko.observable(data ? data.State : '');
    this.City = ko.observable(data ? data.City : '');
    this.Street = ko.observable(data ? data.Street : '');
    this.Notes = ko.observable(data ? data.Notes : '');
    this.Category = ko.observable(data ? data.Category : '');
    this.Email = ko.observable(data ? data.Email : '');
    this.PhoneNumber = ko.observable(data ? data.PhoneNumber : '');
    this.MobileNumber = ko.observable(data ? data.MobileNumber : '');
    this.FaxNumber = ko.observable(data ? data.FaxNumber : '');
    this.Birthday = ko.observable(data ? data.Birthday : '');
    this.Single = ko.observable(data ? data.Single : '');
    this.SocialSecurity = ko.observable(data ? data.SocialSecurity : '');
    this.DrivingLisence = ko.observable(data ? data.DrivingLisence : '');
    this.Rating = ko.observable(data ? data.Rating : 0);
    this.LastUpdate = ko.observable(data ? data.LastUpdate : '');

    this.UpdateCompany = function (element, selectedItem, viewModel) {
        $(element).val(selectedItem.Company);
        viewModel.FirstName(selectedItem.FirstName);

    };
}*/